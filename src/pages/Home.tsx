import React from "react";
import Skeleton from "../components/Sceleton";
import PizzaBlock from "../components/PizzaBlock";
import Sort from "../components/Sort";
import Categories from "../components/Categories";
import Pagination from "../components/Pagination/Pagination";
import { useDispatch, useSelector } from "react-redux";
import { setCurrentPage } from "../store/slices/filterSlice";
import { RootState } from "../store/store.ts";
import { CartItemType } from "../types/type.ts";
import { TypePizzaBlock } from "../types/type.ts";


// –¢–∏–ø –ø–∏—Ü—Ü—ã
// type PizzaItem = {
//   id: string;
//   title: string;
//   price: number;
//   imageUrl: string;
//   sizes: number[];
//   types: number[];
//   rating: number;
//   category: number;
// };

const Home: React.FC = () => {
  const dispatch = useDispatch();

  const currentPage = useSelector((state: RootState) => state.filter.currentPage);
  const { pizza, status } = useSelector((state: RootState) => state.pizza);

  const handleChangePage = (page: number) => {
    dispatch(setCurrentPage(page));
  };

  const renderContent = () => {
    if (status === "error") {
      return (
        <div className="content__error">
          <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ü—Ü—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ</p>
        </div>
      );
    }

    if (status === "loading") {
      return [...Array(6)].map((_, index) => <Skeleton key={index} />);
    }

    return pizza.map((obj: CartItemType) => {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º obj –≤ unknown, –∑–∞—Ç–µ–º –≤ TypePizzaBlock –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Ç–∏–ø–æ–≤
      return <PizzaBlock key={obj.id} {...(obj as unknown as TypePizzaBlock)} />;
    });
  };

  return (
    <div className="container">
      <div className="content__top">
        <Categories />
        <Sort />
      </div>

      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>

      <div className="content__items">{renderContent()}</div>

      <Pagination onChangePage={handleChangePage} currentPage={currentPage} />
    </div>
  );
};

export default Home;
